import { Tabs } from 'expo-router';
import { StatusBar } from 'expo-status-bar';
import IonIcons from '@expo/vector-icons/Ionicons';
import { View, StyleSheet } from 'react-native';
import Svg, { Path } from 'react-native-svg';

export default function RootLayout() {
  return (
    <>
      <Tabs>
        <Tabs.Screen
          name="index"
          options={{
            title: 'Home',
            tabBarShowLabel: false,
            tabBarIcon: ({focused}) => (
              <View style={styles.iconContainer}>
                <Svg width={18} height={24} viewBox="0 0 24 33" style={styles.svgForeground}>
                  <Path d="M14.2046 0.457191C15.3008 0.00322885 16.5067 -0.115591 17.6704 0.115878C18.8343 0.347392 19.9031 0.918865 20.7422 1.75799C21.5813 2.59712 22.1528 3.66591 22.3843 4.82981C22.6157 5.99353 22.4969 7.19945 22.043 8.29568C21.6911 9.14509 21.1485 9.89721 20.4639 10.5003C21.1485 11.1034 21.6911 11.8555 22.043 12.7049C22.4969 13.8012 22.6157 15.0071 22.3843 16.1708C22.1528 17.3347 21.5813 18.4035 20.7422 19.2426C19.9031 20.0817 18.8343 20.6532 17.6704 20.8847C16.5067 21.1162 15.3008 20.9974 14.2046 20.5434C13.961 20.4425 13.7266 20.3228 13.5 20.1918V25.0391C13.6749 24.8996 13.8549 24.7631 14.0435 24.6348C16.2222 23.1526 19.1847 22.5005 22.5 22.5005C23.3284 22.5005 24 23.172 24 24.0005C24 26.9895 22.7106 29.3328 20.4565 30.8663C18.2778 32.3485 15.3153 33.0006 12 33.0006C8.68472 33.0006 5.72222 32.3485 3.54346 30.8663C1.28935 29.3328 0 26.9895 0 24.0005L0.00732422 23.8467C0.0843216 23.0905 0.723485 22.5005 1.5 22.5005C4.81528 22.5005 7.77778 23.1526 9.95654 24.6348C10.1451 24.7631 10.3251 24.8996 10.5 25.0391V20.1918C10.2734 20.3228 10.039 20.4425 9.79541 20.5434C8.69919 20.9974 7.49329 21.1162 6.32959 20.8847C5.1657 20.6532 4.09693 20.0817 3.25781 19.2426C2.4187 18.4035 1.84723 17.3347 1.61572 16.1708C1.38426 15.0071 1.50308 13.8012 1.95703 12.7049C2.30872 11.8559 2.85041 11.1033 3.53467 10.5003C2.85041 9.89734 2.30872 9.14475 1.95703 8.29568C1.50308 7.19945 1.38426 5.99353 1.61572 4.82981C1.84723 3.66591 2.4187 2.59712 3.25781 1.75799C4.09693 0.918864 5.1657 0.347392 6.32959 0.115878C7.49329 -0.115592 8.6992 0.0032293 9.79541 0.457191C10.6445 0.808886 11.397 1.35059 12 2.03485C12.603 1.35059 13.3555 0.808886 14.2046 0.457191ZM3.19336 25.5694C3.51117 26.7735 4.2134 27.6925 5.23096 28.3848C6.43006 29.2006 8.13798 29.7457 10.3052 29.9303C9.98715 28.7269 9.28611 27.8083 8.26904 27.1163C7.06965 26.3003 5.3613 25.7538 3.19336 25.5694ZM20.8052 25.5694C18.6379 25.7539 16.9301 26.3005 15.731 27.1163C14.7138 27.8083 14.0113 28.7267 13.6934 29.9303C15.8612 29.7458 17.5697 29.2008 18.769 28.3848C19.7865 27.6925 20.4873 26.7734 20.8052 25.5694ZM7.27881 12.0091C6.76337 12.0472 6.26483 12.2172 5.83301 12.5057C5.33982 12.8353 4.95558 13.3039 4.72852 13.8519C4.50145 14.4001 4.44137 15.0044 4.55713 15.5863C4.67295 16.168 4.95948 16.7021 5.37891 17.1215C5.79833 17.5409 6.33233 17.8274 6.91406 17.9433C7.49601 18.059 8.10026 17.999 8.64844 17.7719C9.19642 17.5448 9.66506 17.1606 9.99463 16.6674C10.2832 16.2356 10.4531 15.737 10.4912 15.2216L10.5 15.0004V14.7382C9.22278 14.2861 8.2127 13.2776 7.76074 12.0003H7.5L7.27881 12.0091ZM16.2393 12.0003C15.7873 13.2776 14.7772 14.2861 13.5 14.7382V15.0004L13.5088 15.2216C13.5469 15.737 13.7168 16.2356 14.0054 16.6674C14.3349 17.1606 14.8036 17.5448 15.3516 17.7719C15.8997 17.999 16.504 18.059 17.0859 17.9433C17.6677 17.8274 18.2017 17.5409 18.6211 17.1215C19.0405 16.7021 19.327 16.1681 19.4429 15.5863C19.5586 15.0044 19.4985 14.4001 19.2715 13.8519C19.0444 13.3039 18.6602 12.8353 18.167 12.5057C17.7352 12.2172 17.2366 12.0472 16.7212 12.0091L16.5 12.0003H16.2393ZM12 9.00028C11.1716 9.00028 10.5 9.67186 10.5 10.5003C10.5 11.3287 11.1716 12.0003 12 12.0003C12.8284 12.0003 13.5 11.3287 13.5 10.5003C13.5 9.67186 12.8284 9.00028 12 9.00028ZM10.4912 5.77904C10.4531 5.2636 10.2832 4.76505 9.99463 4.33322C9.66506 3.84003 9.19642 3.45579 8.64844 3.22871C8.10026 3.00165 7.49601 2.94157 6.91406 3.05732C6.33233 3.17315 5.79833 3.45968 5.37891 3.87911C4.95948 4.29855 4.67295 4.83255 4.55713 5.41429C4.44137 5.99624 4.50145 6.6005 4.72852 7.14869C4.95558 7.69668 5.33982 8.16533 5.83301 8.4949C6.26483 8.78344 6.76337 8.95338 7.27881 8.99149L7.5 9.00028H7.76074C8.21275 7.72283 9.22257 6.713 10.5 6.26098V6.00024L10.4912 5.77904ZM13.5 6.26098C14.7774 6.713 15.7872 7.72283 16.2393 9.00028H16.5L16.7212 8.99149C17.2366 8.95338 17.7352 8.78344 18.167 8.4949C18.6602 8.16533 19.0444 7.69667 19.2715 7.14869C19.4985 6.6005 19.5586 5.99624 19.4429 5.41429C19.327 4.83255 19.0405 4.29855 18.6211 3.87911C18.2017 3.45968 17.6677 3.17315 17.0859 3.05732C16.504 2.94157 15.8997 3.00165 15.3516 3.22871C14.8036 3.45579 14.3349 3.84003 14.0054 4.33322C13.7168 4.76505 13.5469 5.2636 13.5088 5.77904L13.5 6.00024V6.26098Z"
                     fill="#BF3614"/>
                </Svg>
                <Svg
                  width={36}
                  height={40}
                  viewBox="0 0 64 81"
                  fill="none"
                  style={styles.svgBackground}
                >
                  <Path
                    d="M32 0C49.6729 2.78322e-05 63.9998 14.3262 64 31.999V80.9814H0V31.999C0.000229513 14.3261 14.3271 0 32 0Z"
                    fill="#C9E6FF"
                  />
                </Svg>
              </View>
            ), //() => null, // Add an icon here if desired
            headerShown: false,
          }}
        />
        <Tabs.Screen
          name="user/Profile"
          options={{
            title: 'Profile',
            tabBarIcon: ({focused}) => (
              <IonIcons
                name="person-circle-outline"
                size={24}
                color={focused ? "#BF3614" : "black"}/>
            )
          }}
        />
        <Tabs.Screen
          name="search/Search"
          options={{
            title: 'Search',
            tabBarIcon: () => null, // Add an icon here if desired
          }}
        />
      </Tabs>
      <StatusBar style="auto" />
    </>
  );
}

const styles = StyleSheet.create({
  iconContainer: {
    alignItems: 'center',
    justifyContent: 'center',
    position: 'relative', // Ensures proper stacking of elements
  },
  svgBackground: {
    position: 'absolute', // Places the background SVG behind
    zIndex: 1, // Lower zIndex for background
  },
  svgForeground: {
    position: 'absolute', // Places the foreground SVG on top
    zIndex: 2, // Higher zIndex for foreground
  },
});